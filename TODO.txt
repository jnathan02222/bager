#SERVER SIDE
#Append a random string as a room key when /setup is accessed DONE
    #Save this string somewhere to avoid conflicts DONE
    #Implementation: append querystring first and then forward to proxy? DONE

#Adjust ws controller to send to the same room it came from DONE
#Design a heartbeat function to constantly relay the latest data to all clients
#Detect player disconnects, including sudden disconnects
    #Deleting a room
    #Group user by session id

#CLIENT SIDE
#When first connecting, send initial data (name and avatar) and retrieve current data (Settings / Players)
    #Subscripe to the correct room DONE
#On interactions with avatar, name or settings, publish new data to the server
    #Note, maybe only let 1 person touch the settings





#GAME LOOP
#Select a player
#Player chooses a word
#Draws while people guess
#Finish and pass play to next player








Key concepts
https://spring.io/quickstart
https://spring.io/guides/gs/messaging-stomp-websocket
https://spring.io/guides/gs/scheduling-tasks
Services
Proxy / Redirects
https://docs.spring.io/spring-framework/reference/web/websocket/stomp/handle-send.html



#heartbeat + info update (should work with canvas and timer?)
#Disconnect logic
#Caching problem


#Fixing disconnecting during GAME
#Limit name length DONE
#Limit guess length DONE
#Clear canvas between 
#Waiting for <current player> to select a word
#Icon to show current user
#Show word after guess
#Hints
#Sound effects